package com.infosys.expenseManagementApplication.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.infosys.expenseManagementApplication.bean.Expense;
import com.infosys.expenseManagementApplication.dao.ExpenseDao;
import com.infosys.expenseManagementApplication.service.ExpenseUserService;

@RestController
@RequestMapping("/exp-mng/")
@CrossOrigin(origins = "http://localhost:5656")
public class ExpenseReportController {

    @Autowired
    private ExpenseDao expenseDao; // Data access object for Expense

    @Autowired
    private ExpenseUserService service; // Service to get user-related data

    // Get all expenses
    @GetMapping("/expense")
    public List<Expense> getAllExpenses() {
        return expenseDao.getAllExpenses();
    }

    // Get expense by expense number
    @GetMapping("/expense/{expenseNumber}")
    public Expense getExpenseById(@PathVariable String expenseNumber) {
        return expenseDao.getExpenseByNumber(expenseNumber);
    }

    // Add a new expense
    @PostMapping("/expense")
    public Expense saveExpense(@RequestBody Expense expense) {
        String customerId = service.getCustomerId(); // Auto-assign customer ID
        expense.setCustomerId(customerId);
        expense.setExpenseNumber(expenseDao.generateExpenseNumber()); // Generate expense number
        return expenseDao.save(expense);
    }

    // Update an existing expense
    @PutMapping("/expense")
    public void updateExpense(@RequestBody Expense expense) {
        expenseDao.save(expense);
    }

    // Get expenses for the current customer
    @GetMapping("/expense/current")
    public List<Expense> getExpensesForCurrentCustomer() {
        String customerId = service.getCustomerId();
        return expenseDao.getExpensesByCustomerId(customerId);
    }

    // Get total expenses for a customer (optional utility)
    @GetMapping("/expense/total/{customerId}")
    public Double getTotalExpenses(@PathVariable String customerId) {
        return expenseDao.getTotalExpensesByCustomerId(customerId);
    }
}
